#ifndef TICTACTOE_H
#define TICTACTOE_H

#include <vector>
#include <string>

/**
 * @brief Класс для игры "Крестики-нолики".
 * 
 * Этот класс реализует функционал игры "Крестики-нолики".
 * Он управляет игровым полем, обработкой ходов игроков,
 * проверкой победителя и ничьей.
 */
class TicTacToe {
public:
    /**
     * @brief Конструктор класса TicTacToe.
     * 
     * Создает пустое игровое поле 3x3.
     */
    TicTacToe();

    /**
     * @brief Печатает текущее состояние игрового поля.
     * 
     * Отображает игровое поле в консоли, где пустые ячейки
     * обозначаются как пробелы, а ходы игроков - как 'X' и 'O'.
     */
    void printBoard() const;

    /**
     * @brief Делает ход игрока.
     * 
     * Проверяет возможность выполнения хода по указанным координатам
     * и записывает ход игрока, если это возможно.
     * 
     * @param[in] row Номер строки (0-индексация).
     * @param[in] col Номер столбца (0-индексация).
     * @param[in] player Символ игрока ('X' или 'O').
     * @return true, если ход выполнен успешно.
     * @return false, если ход невозможен (ячейка занята или некорректные координаты).
     */
    bool makeMove(int row, int col, char player);

    /**
     * @brief Проверяет победителя.
     * 
     * Анализирует игровое поле и определяет, есть ли победитель.
     * 
     * @return Символ победителя ('X' или 'O') или пробел (' '), если победителя нет.
     */
    char checkWinner() const;

    /**
     * @brief Проверяет наличие ничьей.
     * 
     * Определяет, заполнено ли игровое поле, и проверяет, есть ли ничья.
     * 
     * @return true, если игра завершилась ничьей.
     * @return false, если ничьей нет.
     */
    bool isDraw() const;

private:
    /**
     * @brief Игровое поле.
     * 
     * Двумерный вектор, представляющий игровое поле.
     * Пустые клетки обозначаются как ' ', ходы игроков - как 'X' и 'O'.
     */
    std::vector<std::vector<char>> board;
};

#endif // TICTACTOE_H
